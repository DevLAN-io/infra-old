{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>DevLAN-io/infra//.github/renovate/autoMerge",
    "github>DevLAN-io/infra//.github/renovate/labels",
    "github>DevLAN-io/infra//.github/renovate/semanticCommits"
  ],
  hostRules: [
    {
      hostType: "docker",
      username: "nick170",
      encrypted: {
        password: "wcFMA/xDdHCJBTolARAAiM6GLd0nUc0RbSlVScww8pWI93aO+I4T1hMLZCcDBdB4+u5qoLoer2pNgXvYH5n9CL+WJhlxTaN4vL92AsE4LSU67Aw2jnFngIAr3jQPgawwdkV+tlHwOMrH9QtSLNEUdau58m/aG1Xbvl+rNn1CMSgKHRZqfszg6fHZ+7HcguSXjKm+TftdbJloHss+Wu2z79MZ6Hus2g5erjh3Bsb036Zo4Rv5aQ+S/mYaGJjSExiOxVEQhTWf/s4tYbBlUitCUDsz/EAqy+tjRmJpCMUCg1XKlTIjLYNLdgxXmtyVj0pDS3qPJ//z0Vat0JO3Tv2086aDKjRhg1SkFLoQ0MlaVMtnBMT8BBsoyYgKcfPOda7xTat8WytUrxekAXFgSRO29Y2FGhHpKfNeDEkQtLWeeZI0wjBSI/7XtyXUWER7ywv/DPBDfgPgUPhCYMGtcy8WqWsTnBBEKSW7jUUcnYJKvwhZe1bZD5sxlGBQYiTOPuqlLCeBMV2EcQxjqz+tkt1z3+uPBGmfaZvY6Ql6pyW/47Y5IedRQghGPIXq9/Rmf/eQE8nafrQ9mwLWo5gyioUG3PfcXpLN8qyt7cNRp+b7NHtdwbGjtdFy2GNlfKGF2bDJYg7L3sk03YyJ0IX1lxVIH6g/d3OhEsvdhVpg5mb+qrzW8ts/WdgeLaHNBK3WAYbSWwEJvn9lwBd6SZiVHAVqpbLS+BPFkuHty47Unc7meIinV2+C7qpsMiD7LxhFCtR8qaYkSRsT25ffgJsXxdIlWm3cIWBZkwiRs5EJDKWIc82ZGVwo7J0sr8fhoLg"
      }
    }
  ],
  "platform": "github",
  "username": "DevLAN-io",
  "repositories": [
    "DevLAN-io/infra"
  ],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "DevLAN-io[bot] <172667+DevLAN-io[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "🤖🤖🤖 Renovate Dashboard 🤖🤖🤖",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  "ignorePaths": [
    "cluster/base/",
    "**/backup-job.yaml",
    "**/trash-updater-job.yaml",
    "**/travelstories/**"
  ],
  // set up renovate managers
  "docker-compose": {
    "fileMatch": [
      "(^|\/)docker-compose.*\.ya?ml$",
      "(^|\/)docker-compose.*\.ya?ml\.j2$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "cluster/.+/helm-release\\.yaml$"
    ]
  },
  "helmv3": {
    "fileMatch": [
      "charts/.+/Chart\\.yaml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ]
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process cert-manager CRD's
    {
      "fileMatch": [
        "cluster/base-custom/crds/cert-manager/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process External Snapshotter CRDs
    {
      "fileMatch": [
        "cluster/crds/external-snapshotter/.+\\.yaml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?)\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "github-releases"
    },
    // regexManager to read and process kube-prometheus-stack CRDs
    {
      "fileMatch": [
        "cluster/base-custom/crds/kube-prometheus-stack/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process Rook-Ceph CRD's
    {
      "fileMatch": [
        "cluster/base-custom/crds/rook-ceph/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "commitMessageExtra": "to {{newVersion}}"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": [
        "blakeblackshear/frigate"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": [
        "quay.io/minio/minio"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/qbittorrent"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^version-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": [
        "ghcr.io/linuxserver/bookstack",
        "ghcr.io/linuxserver/healthchecks"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^version-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": [
        "ghcr.io/linuxserver/resilio-sync"
      ]
    },
    // group packages
    {
      "matchDatasources": [
        "helm",
        "docker"
      ],
      "matchPackagePatterns": [
        "^rook.ceph"
      ],
      "groupName": "rook-ceph-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "github-tags",
        "docker"
      ],
      "matchPackagePatterns": [
        "rancher/system-upgrade-controller"
      ],
      "groupName": "system-upgrade-controller-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
